syntax = "proto3";

package douyin;

message Response {
    repeated Message messagesList = 1;
    string cursor = 2;
    uint64 fetchInterval = 3;
    uint64 now = 4;
    string internalExt = 5;
    uint32 fetchType = 6;
    map<string, string> routeParams = 7;
    uint64 heartbeatDuration = 8;
    bool needAck = 9;
    string pushServer = 10;
    string liveCursor = 11;
    bool historyNoMore = 12;
}

message Message {
    string method = 1;
    bytes payload = 2;
    int64 msgId = 3;
    int32 msgType = 4;
    int64 offset = 5;
    bool needWrdsStore = 6;
    int64 wrdsVersion = 7;
    string wrdsSubKey = 8;
}

message webcast {
    message Data {
        message Text {
            string key = 1;
            string default_pattern = 2;
            TextFormat default_format = 3;
            repeated TextPiece pieces = 4;
            map<string, SchemaInfo> schema_infos = 20;
        }
    }

    message Im {
        message RoomBorderMessage {
            Common common = 1;
            Data.BorderInfo border_info = 2;
        }

        message Common {
            string method = 1;
            uint64 msg_id = 2;
            uint64 room_id = 3;
            uint64 create_time = 4;
            int32 monitor = 5;
            bool is_show_msg = 6;
            string describe = 7;
            Data.Text display_text = 8;
            uint64 fold_type = 9;
            uint64 anchor_fold_type = 10;
            uint64 priority_score = 11;
            string log_id = 12;
            string msg_process_filter_k = 13;
            string msg_process_filter_v = 14;
            Data.User user = 15;
            Data.Room room = 16;
            uint64 anchor_fold_type_v2 = 17;
            uint64 process_at_sei_time_ms = 18;
            uint64 random_dispatch_ms = 19;
            bool is_dispatch = 20;
            uint64 channel_id = 21;
            uint64 diff_sei2abs_second = 22;
            uint64 anchor_fold_duration = 23;
            uint64 app_id = 24;
        }

        message PublicAreaCommon {
            Data.Image user_label = 1;
            uint64 user_consume_in_room = 2;
            uint64 user_send_gift_cnt_in_room = 3;
            uint64 individual_priority = 4;
            map<string, string> individual_strategy_result = 5;
            uint64 support_pin = 6;
            SuffixText suffix_text = 7;
            int32 im_action = 8;
            bool forbidden_profile = 9;
            Data.ChatReplyRespInfo reply_resp = 10;
            map<string, string> tracking_params = 11;
            uint64 is_featured = 12;
            bool need_filter_display = 13;
        }

        message SuffixText {
            uint64 biz_type = 1;
            Data.Text text = 2;
        }

        message LandscapeAreaCommon {
            bool show_head = 1;
            bool show_nickname = 2;
            bool show_font_color = 3;
            repeated string color_value = 4;
            repeated int32 comment_type_tags = 5;
        }

        message FlexImageStruct {
            repeated string url_list = 1;
            string uri = 2;
            repeated uint64 flex_setting = 3;
            repeated uint64 text_setting = 4;
            uint64 top_border_height = 5;
        }

        message CommonBubbleConfig {
            string content = 1;
            uint64 duration = 2;
            Data.Text rich_text = 3;
            string scheme_url = 4;
            FlexImageStruct background_image = 5;
            Data.Image arrow_image = 6;
            int32 message_type = 7;
            int32 arrow_position = 8;
        }

        message EffectiveActivityEmojiGroup {
            Data.ActivityEmojiGroup emoji_group = 1;
            uint64 start_time = 2;
            uint64 end_time = 3;
        }

        message ActivityEmojiGroupsMessage {
            Common common = 1;
            repeated EffectiveActivityEmojiGroup activity_emoji_groups = 2;
        }

        message ActivityInteractiveMessage {
            Common common = 1;
            string extra = 2;
        }

        message InteractEffectMessage {
            Common common = 1;
            uint64 effect_id = 2;
            string extra = 3;
            string tea_log = 4;
            uint64 message_type = 5;
            uint64 arg1 = 6;
            uint64 arg2 = 7;
            string arg3 = 8;
        }

        message ActivityMagicAsianGamesMessage {
            Common common = 1;
            string push_id = 2;
            string push_content = 3;
            int32 platform = 4;
            VideoCardPushModule video_card = 5;
            MedalRankListModule medal_list = 6;
            CollectModule collect = 7;
            ScheduleModule popular_star = 8;
            LatestNewsModule hot_live = 9;
        }

        message LinkInfo {
            int32 link_type = 1;
            string link_url = 2;
        }

        message PageFilter {
            string highlight_group_name = 1;
        }

        message VideoCardSize {
            uint64 height = 1;
            uint64 width = 2;
        }

        message StatsParam {
            uint64 ep_id = 1;
            uint64 sec_id = 2;
            uint64 r_id = 3;
        }

        message VideoCardPushModule {
            uint64 module_id = 1;
            uint64 module_version = 2;
            repeated VideoBigCard update_list = 3;
            repeated string delete_list = 4;
        }

        message MedalRankListModule {
            uint64 module_id = 1;
            uint64 module_version = 2;
            repeated VideoBigCard update_list = 3;
            repeated string delete_list = 4;
        }

        message CollectModule {
            uint64 module_id = 1;
            uint64 module_version = 2;
            repeated VideoBigCard update_list = 3;
            repeated string delete_list = 4;
        }

        message ScheduleModule {
            uint64 module_id = 1;
            uint64 module_version = 2;
            repeated VideoBigCard update_list = 3;
            repeated string delete_list = 4;
        }

        message LatestNewsModule {
            uint64 module_id = 1;
            uint64 module_version = 2;
            repeated VideoBigCard update_list = 3;
            repeated string delete_list = 4;
        }

        message VideoBigCard {
            int32 card_type = 1;
            string cover_url = 2;
            string title = 3;
            string sub_title = 4;
            CornerMark corner_mark = 5;
            VideoCardSize video_size = 6;
            string background_url = 7;
            string unique_id = 8;
            string StatsParam = 9;
            string video_source = 10;
            bool is_match = 11;
            LinkInfo link_info = 12;
            string extra = 255;

            message CornerMark {
                int32 type = 1;
                bool show = 2;
            }
        }

        message RankItem {
            uint64 rank = 1;
            string country = 2;
            string country_img_url = 3;
            uint64 gold_medal = 4;
            uint64 silver_medal = 5;
            uint64 copper_medal = 6;
            uint64 total_medal = 7;
            string unique_id = 8;
            string extra = 255;
        }

        message Highlight {
            int32 highlight_type = 1;
            string item_id = 2;
            string replay_id = 3;
            string video_source = 4;
            string unique_id = 5;
            string cover_img_url = 6;
            uint64 play_time_ms = 7;
            string title = 8;
            string group_name = 9;
        }

        message AGMatchInfo {
            string l_country = 1;
            string r_country = 2;
            uint64 l_score = 3;
            uint64 r_score = 4;
            string l_country_img_url = 5;
            string r_country_img_url = 6;
        }

        message MatchLive {
            int32 ag_live_status = 1;
            string appointment_id = 2;
            string room_id = 3;
            bool has_subscribe = 4;
            string camera_id = 5;
        }

        message Match {
            string title = 1;
            uint64 start_time_ms = 2;
            string focus = 3;
            int32 tag_type = 4;
            AGMatchInfo ag_match_info = 5;
            MatchLive match_live = 6;
            string unique_id = 7;
        }

        message News {
            string title = 1;
            uint64 update_time_ms = 2;
            LinkInfo link_info = 3;
            string unique_id = 4;
        }

        message MagicGestureActivityMessage {
            Common common = 1;
            int32 status = 2;
            string effect_id = 3;
            int32 action_type = 4;
            string action_schema = 5;
            string biz_id = 6;
        }

        message ActivityMagicMessage {
            Common common = 1;
            string push_id = 2;
            string push_content = 3;
        }

        message PixActivityMessage {
            Common common = 1;
            int32 current_level = 2;
            bool can_change_prop = 3;
        }

        message PrizeNoticeMessage {
            Common common = 1;
            uint64 asset_id = 2;
            ImageInfo image_info = 3;
            Data.Image landscape_bg_img = 4;
            string landscape_content = 5;
            uint64 scene_context_id = 6;
            int32 landscape_height = 7;
            int32 play_priority = 8;
            map<string, string> extra = 9;
            bool use_separate_player = 10;
        }

        message ImageInfo {
            Data.Image img = 1;
            int32 start = 2;
            int32 duration = 3;
            int32 x = 4;
            int32 y = 5;
            int32 width = 6;
            int32 height = 7;
            bool need_circle = 8;
        }

        message ActivityEffectRefreshMessage {
            Common common = 1;
        }

        message AdminPrivilegeMessage {
            Common common = 1;
            AdminPrivilegeStruct data = 2;
        }

        message AdminPrivilegeStruct {
            int32 privilege = 1;
            uint64 op = 2;
            repeated int32 current_privileges = 3;
        }

        message AdminRecordHandleMessage {
            Common common = 1;
            int32 handle_type = 2;
        }

        message AdminData {
            uint64 uid = 1;
            string name = 2;
        }

        message TextExtraItem {
            int32 start = 1;
            int32 stop = 2;
            int32 type = 3;
            string user_id = 4;
            string hashtag_name = 5;
            string hashtag_id = 6;
            bool is_commerce = 7;
            string aweme_id = 8;
            int32 sub_type = 9;
        }

        message AdminRecordMessage {
            Common common = 1;
            AdminData admin = 2;
            uint64 item_id = 3;
            uint64 draft_id = 4;
            string video_text = 5;
            repeated TextExtraItem video_text_extra = 6;
        }

        message AnchorBoostMessage {
            Common common = 1;
            AnchorBoost data = 2;
            PublicAreaCommon public_area_common = 3;
        }

        message AnchorBoost {
            uint64 event_name = 1;
            uint64 anchor_id = 2;
            int32 live_id = 3;
            int32 event_type = 4;
            string content = 5;
        }

        message AnchorCommonPopupMessage {
            Common common = 1;
            string DialogInfo = 2;
            string Schema = 3;
        }

        message iAnchorRoomDataChangeMessage {
            Common common = 1;
            Data.Text top_text = 2;
            Data.Text bottom_text = 3;
            uint64 message_type = 4;
            string extra = 5;
        }

        message PCAnchorRoomDataChangeMessage {
            Common common = 1;
            Data.Text top_text = 2;
            Data.Text bottom_text = 3;
            uint64 message_type = 4;
            string extra = 5;
        }

        message AnswerReviewMessage {
            Common common = 1;
            int32 answerReviewMsgTypeEnum = 2;
            uint64 answer_id = 3;
            uint64 chat_id = 4;
            int32 answerReviewResTypeEnum = 5;
            uint64 video_pin_id = 6;
            uint64 original_msg_id = 7;
            uint64 pin_id = 8;
        }

        message AssetEffectUtilMessage {
            Common common = 1;
            uint64 asset_id = 2;
            uint64 priority = 3;
            uint64 price = 4;
            Data.Text text = 5;
            uint64 text_width = 6;
            uint64 text_heitht = 7;
            string tracking = 8;
            string dress_id = 9;
            repeated EffectUtilImageInfo images = 10;
            repeated EffectUtilTextInfo texts = 20;
            string finish_self_schema = 21;
            map<string, Data.TextPiece> piece_values = 22;
        }

        message EffectUtilImageInfo {
            string placeholder_key = 1;
            Data.Image mix_image = 2;
        }

        message EffectUtilTextInfo {
            string placeholder_key = 1;
            string content = 2;
            uint64 font_size = 3;
            string font_color = 4;
        }

        message AssetMessage {
            Common common = 1;
            uint64 asset_id = 2;
            Data.Text panel_display_text = 3;
            bool show_message = 4;
            bool show_panel = 5;
            Data.User user = 6;
            data.User to_user = 7;
            Data.GiftIMPriority priority = 8;
            string log_id = 9;
            int32 play_priority = 10;
        }

        message AudioBGImgMessage {
            Common common = 1;
            Data.AudioBGData bg_list = 2;
            int32 ReviewPass = 3;
            int32 bg_type = 4;
            string show_text = 5;
        }

        message AudioChatMessage {
            Common common = 1;
            Data.User user = 2;
            string content = 3;
            string audio_url = 4;
            uint64 audio_duration = 5;
            PublicAreaCommon public_area_common = 6;
            Data.Text rtf_content = 7;
        }

        message AuthorizationNotifyMessage {
            Common common = 1;
            string from = 2;
            string content = 3;
            string style = 4;
            ContentBlock user_content = 6;
            RelationBlock user_relation = 7;

            message ContentBlock {
                bool show = 1;
                bool is_authorized = 2;
                string title = 3;
                string content = 4;
                string detail = 5;
            }

            message RelationBlock {
                bool show = 1;
                bool is_authorized = 2;
                string title = 3;
                string content = 4;
                string detail = 5;
            }
        }

        message AutoCoverMessage {
            Common common = 1;
            Data.Image image = 2;
        }

        message AvatarRoomLeaveMessage {
            Common common = 1;
            int32 leave_reason = 2;
            uint64 format_id = 3;
            string rtc_room_id = 4;
            uint64 last_ping_time = 5;
        }

        message AwemeShopExplainMessage {
            Common common = 1;
            Extra extra = 2;

            message Extra {
                uint64 promotion_id = 1;
                bool active = 2;
            }
        }

        message BackRecordVideoMessage {
            Common  common = 1;
            string  m3u8_url = 2;
            repeated string  ts_urls = 3;
            string  execution_id = 4;
            bool  succeed = 5;
            uint64  start_time = 6;
            uint64  end_time = 7;
        }

        message BattleAutoMatchMessage {
            Common  common = 1;
            ResponseData  data = 2;

            message RivalInfo {
                uint64  user_id = 1;
                Data.Room  room = 2;
            }

            message PreviewUser {
                string  nickname = 1;
                Data.Image  avatar = 2;
            }

            message ResponseData {
                string  default_content = 1;
                Data.Image  default_avatar = 2;
                uint64  rival_user_id = 3;
                Data.Room  rival_room = 4;
                repeated PreviewUser  preview_user_list = 5;
                uint64  expect_time = 6;
                string  rival_user_id_str = 7;
                bool  can_high_way = 8;
                uint64  max_wait_time = 9;
                string  sign_extra = 10;
                repeated RivalInfo  rivals = 11;
                string  battle_attached_info = 19;
                string  channel_id_str = 20;
                uint64  match_type = 21;
            }
        }

        message BattleCancelMessage {
            Common  common = 1;
            uint64  channel_id = 2;
        }

        message BattleDrawPropMessage {
            Common  common = 1;
            int32  status = 2;
            int32  reason = 3;
            Data.Image  animation = 4;
            uint64  prop_id = 5;
            uint64  battle_id = 6;
        }

        message BattleEffectContainerMessage {
            Common  common = 1;
            uint64  channel_id = 2;
            uint64  battle_id = 3;
            string  battle_effect_info = 4;
        }

        message BattleFeedBackCardMessage {
            Common  common = 1;
            uint64  rival_uid = 2;
            int32  feedback_card_type = 3;
            Data.FeedbackCard  feedback_card = 4;
            uint64  battle_id = 5;
            uint64  channel_id = 6;
        }

        message BattleFrontRankMessage {
            Common common = 1;
        }

        message BattleGuidanceMessage {
            Common  common = 1;
            uint64  channel_id = 2;
            uint64  battle_id = 3;
            UIInfo  ui_info = 4;
            ExtraInfo  extra_info = 5;

            message TextElement {
                string  text = 1;
                string  value = 2;
            }

            message UIInfo {
                repeated Data.User  users = 1;
                repeated TextElement  text_elements = 2;
            }

            message ExtraInfo {
                uint64  battle_duration = 1;
                uint64  actual_duration = 2;
            }
        }

        message BattleInviteMessage {
            Common  common = 1;
            int32  invite_type = 2;
            uint64  channel_id = 3;
            string  sign_extra = 4;
            uint64  invite_uid = 5;
            uint64  battle_id = 6;
            string  multiple_again_prompts = 7;
            Data.PanelTitle  panel_title = 8;
            int32  scene = 9;
            string  invite_title = 10;
            string  invite_sub_title = 11;
            uint64  wait_sec = 12;
            Data.BattleConfigSetting  battle_config_setting = 14;
            uint64  duration_time = 15;
            int32  multi_pk_mode = 16;
            string  client_attached_info = 17;
            string  lynx_data = 18;
            string  event_tracking_info = 19;
        }

        message BattleModeMessage {
            Common  common = 1;
            uint64  mode = 2;
            StealTowerData  steal_tower_data = 3;
            uint64  now = 4;

            message StealTowerData {
                uint64  start_time = 1;
                uint64  finish_time = 2;
                uint64  duration = 3;
                uint64  target_score = 4;
                uint64  attacker_id = 5;
                bool  finish = 6;
                uint64  win = 7;
                uint64  open_score = 8;
                uint64  count = 9;
            }
        }

        message BattleMultiMatchMessage {
            Common  common = 1;
            int32  match_status = 2;
            uint64  expect_time = 3;
            repeated PreviewUser  preview_user_list = 4;
            uint64  default_wait_limit = 5;
            uint64  invite_limit_sec = 6;
            uint64  match_type = 7;

            message PreviewUser {
                string  nickname = 1;
                Data.Image  avatar = 2;
            }
        }

        message BattleNotifyMessage {
            Common  common = 1;
            string  content = 2;
            int32  notify_type = 3;
            uint64  continue_seconds = 4;
        }

        message BattlePowerContainer {
            ContainerInfo info = 1;

            message ContainerInfo {
                int32  type = 1;
                repeated Data.User  users = 2;
                string  text = 3;
                Data.Image  icon = 4;
                string  client_point_info = 10;
            }

            message ClientPointInfo {
                uint64  count = 1;
                string  effect_type = 2;
            }
        }

        message BattlePowerContainerMessage {
            Common  common = 1;
            uint64  channel_id = 2;
            uint64  battle_id = 3;
            string  reverse_info = 4;
            string  container = 5;

            message ReverseInfo {
                Data.User  user = 1;
                uint64  reverse_count = 2;
                string  des = 3;
                repeated Data.User  users = 4;
                int32  scene = 5;
                string  effect_type = 6;
            }
        }

        message PrecisionMatch {
            uint64  sponsor_id = 1;
            repeated Matcher  matchers = 2;
            string  match_reason = 3;
            uint64  wait_seconds = 4;
            uint64  precision_match_id = 5;
            string  activity_name = 6;
            string  recommend_reason = 7;
            string  sign_extra = 8;
            int32  source = 9;
            string  not_disturb_text = 10;
            uint64  flex_activity_id = 11;
            uint64  duration = 12;
            string  battle_attached_info = 13;

            message Matcher {
                uint64  user_id = 1;
                Data.Room  room = 2;
                int32  status = 3;
                repeated Data.BattleRivalTag  tags = 4;
                string  desc_text = 5;
            }
        }

        message BattlePrecisionMatchMessage {
            Common  common = 1;
            PrecisionMatch  precision_match = 2;
        }

        message BattleRejectMessage {
            Common  common = 1;
            uint64  channel_id = 2;
            uint64  battle_id = 3;
            uint64  reject_uid = 4;
            string  multiple_again_prompts = 5;
            int32  invite_type = 6;
        }

        message BattleRewardMessage {
            Common  common = 1;
            BattleRewardMessage.PKReward  pk_result = 2;
            BattleRewardMessage.PKChangeBackground  upgrade_result = 3;
            BattleRewardMessage.LinkmicBackground  linkmic_background_result = 4;

            message PKReward {
                Data.BattleSkinConfig  skin_config = 1;
                string  Extra = 2;
            }

            message PKChangeBackground {
                Data.BattleSkinConfig skin_config = 1;
            }

            message LinkmicBackground {
                Data.LinkmicUIConfig ui_config = 1;
            }
        }

        message BattleSeasonPKResultMessage {
            Common  common = 1;
            PKResult  pk_result = 2;
            UpgradeResult  upgrade_result = 3;
            GetGradeInfo  get_grade_info = 4;

            message PKResultPointsDescription {
                string  point_desc = 1;
                uint64  point = 2;
                string  point_str = 3;
            }

            message PKResult {
                Data.Image  result_img = 1;
                Data.Image  bg_img = 2;
                string  result_str = 3;
                repeated PKResultPointsDescription  descriptions = 4;
            }

            message UpgradeResult {
                Data.Image  grade_img = 1;
                Data.Image  upgrade_img = 2;
                string  upgrade_desc = 3;
                Data.Image  desc_bg_img = 4;
                string  pre_grade_desc = 5;
                string  after_grade_desc = 6;
                Data.Image  before_upgrade_img = 7;
            }

            message GetGradeInfo {
                string  get_grade_desc = 1;
                Data.Image  grade_img = 2;
                Data.Image  start_img = 3;
            }
        }

        message BattleStateSyncMessage {
            Common  common = 1;
            BattleSettings  battle_settings = 2;
            Data.SurvivalInfo  survival_info = 3;
            Data.BreakthroughInfo  breakthrough_info = 4;
        }

        message BattleMode {
            int32  mode = 1;
            StealTowerData  steal_tower_data = 2;

            message StealTowerData {
                uint64 trigger_time = 1;
            }
        }

        message BattleSettings {
            uint64  battle_id = 2;
            uint64  start_time_ms = 3;
            uint64  duration = 4;
            string  theme = 5;
            uint64  channel_id = 6;
            uint64  match_type = 7;
            string  banner_url = 8;
            uint64  sub_type = 9;
            int32  mode = 10;
            string  config = 11;
            string  notify_scheme_url = 12;
            string  hotsoon_notify_scheme_url = 13;
            Data.Image  unknwon_field1 = 14;
            string  unknwon_field2 = 15;
            string  unknwon_field3 = 16;
            Data.BattleTitleConfig  title_config = 17;
            Data.BattleTitleConfig  punish_config = 18;
            uint64  punish_duration = 19;
            uint64  punish_start_time_ms = 20;
            int32  optimize_version = 21;
            bool  punish_optimize_on = 22;
            uint64  blood_display_duration = 23;
            uint64  status_display_duration = 24;
            string  toast = 25;
            bool  need_close_linkmic = 26;
            bool  display_last_result = 27;
            string  normal_activity_name = 28;
            int32  invite_type = 29;
            Data.BattleConfigSetting  battle_config_setting = 31;
            Data.BattleBarConfig  bar_config = 32;
            Data.BattleBarConfig  hotsoon_bar_config = 33;
            uint64  initiator_id = 34;
            int32  battle_type = 35;
            uint64  finished = 36;
            repeated int32  play_tags = 37;
            uint64  steal_tower_duration = 38;
            string  lynx_data = 39;
        }

        message BattleTask {
            bool enable_task = 1;
        }

        message LinkMicBattle {
            Common  common = 1;
            BattleSettings  battle_settings = 2;
            BattleMode  battle_mode = 3;
            BattleTask  battle_task = 4;
            int32  skin_type = 5;
            map<int64,Data.BattleUserInfo> user_infos = 6;
            Data.OperationalPlay  operational_play = 7;
            int32  battle_type = 8;
            bool  relative_score = 9;
            bool  normal_to_multiple = 10;
            Data.BattleSkinConfig  skin_config = 11;
            Data.LinkIconConfig  link_icon_config = 12;
            string  request_source = 13;
            string  event_tracking_info = 14;
        }

        message BattleTeamTaskAskMessage {
            Common  common = 1;
            string  team_task_json = 2;
        }

        message BattleTeamTaskMessage {
            Common  common = 1;
            Data.TeamTask  team_task = 2;
            string  team_task_json = 3;
        }

        message BattleToastMessage {
            Common  common = 1;
            string  content = 2;
            int32  notify_type = 3;
            uint64  duration = 4;
            uint64  battle_id = 5;
            UIConfig  ui_config = 6;

            message Text {
                string  content = 1;
                string  color = 2;
            }

            message UIConfig {
                Text  content = 1;
                string  schema = 2;
                Data.Image  icon = 3;
                Text  icon_text = 4;
            }
        }

        message BattleUseCardMessage {
            Common  common = 1;
            Data.ItemCardInfo  info = 2;
            string  extra = 4;
        }

        message BeginnerGuideMessage {
            Common  common = 1;
            int32  message_type = 2;
            string  prompts = 3;
        }

        message LinkmicBigEventMessage {//TODO 没看懂怎么解 content
            Common  common = 1;
            int32  msg_type = 2;
            InitLinkmicContent  init_linkmic_content = 3;
            SwitchSceneContent  switch_scene_content = 4;
            SwitchEarphoneMonitorContent  switch_earphone_monitor_content = 5;
            SwitchKtvModeContent  switch_ktv_mode_content = 6;
            SwitchLyricStatusContent  switch_lyric_status_content = 7;
            SwitchFullSongStatusContent  switch_full_song_status_content = 8;
            SwitchTuningEffectContent  switch_tuning_effect_content = 9;
        }

        message InitLinkmicContent {
            int32 target_mode = 1;
        }

        message SwitchSceneContent {
            int32 target_mode = 1;
        }

        message SwitchEarphoneMonitorContent {
            int32 to_status = 1;
        }

        message SwitchKtvModeContent {
            int32 ktv_mode = 1;
        }

        message SwitchLyricStatusContent {
            int32 to_status = 1;
        }

        message SwitchFullSongStatusContent{
            int32 to_status = 1;
        }

        message SwitchTuningEffectContent {
            string to_effect_name = 1;
        }

        message BridgeData {
            Common  common = 1;
            string  bridge_message_json = 2;
        }

        message BridgeMessage {
            Common  common = 1;
            BridgeData  bridge = 2;
        }

        message BrotherhoodMessage {
            Common  common = 1;
            string  content = 2;
        }

        message CarBallShowMessage {
            Common  common = 1;
            bool  is_show = 2;
        }

        message CarSeriesInfoMessage {
            Common  common = 1;
            uint64  action_type = 2;
            uint64  series_id = 3;
            string  series_name = 4;
            string  official_price = 5;
            string  image_url = 6;
            string  open_url = 7;
        }

        message CarnivalMessage {
            Common  common = 1;
            Data.CombinedText  text = 2;
            uint64  carnival_seq_id = 3;
            uint64  danmaku_style_type = 4;
            int32  special_mark = 5;
            uint64  priority = 6;
        }

        message CategoryChangeMessage {
            Common  common = 1;
            string  category_id = 2;
            string  category_name = 3;
            string  challenge_id = 4;
            string  challenge_name = 5;
        }

        message ChatCarnivalMessage {
            Common  common = 1;
            uint64  notify_type = 2;
            uint64  anchor_start_timestamp = 3;
            uint64  anchor_start_second = 4;
            uint64  user_start_timestamp = 5;
            uint64  user_start_second = 6;
            uint64  duration = 7;
            string  background_color = 8;
            Data.Image  title_image = 9;
            string  pre_content = 10;
            string  content = 11;
            uint64  orientations = 12;
            uint64  move_speed = 13;
            repeated ChatItem  chat_style = 14;
            repeated EggItem  egg_style = 15;
            uint64  word_orientation = 16;
            uint64  move_direction = 17;
            repeated uint64  egg_show_range = 18;
            repeated uint64  size_and_alpha = 19;
            repeated uint64  vertical_offset = 20;
            uint64  path = 21;
            string  word_color = 22;
            uint64  show_webp = 23;
            uint64  use_privilege_region = 24;
            uint64  can_open_contour = 25;
            uint64  support_show_type = 26;
        }

        message EggItem {
            Data.Image  background = 1;
            uint64  background_hight = 2;
            uint64  background_width = 3;
            uint64  use_rate = 4;
            uint64  is_dynamic_egg = 5;
        }

        message ChatItem {
            uint64  head_size = 1;
            uint64  content_size = 2;
            string  content_color = 3;
            FlexImageStruct  background = 4;
            uint64  background_hight = 5;
            uint64  background_width = 6;
            uint64  use_rate = 7;
        }

        message ChatMessage {
            Common  common = 1;
            Data.User  user = 2;
            string  content = 3;
            bool  visible_to_sender = 4;
            Data.Image  background_image = 5;
            string  full_screen_text_color = 6;
            Data.Image  background_image_v2 = 7;
            PublicAreaCommon  public_area_common = 9;
            Data.Image  gift_image = 10;
            uint64  agree_msg_id = 11;
            int32  priority_level = 12;
            LandscapeAreaCommon  landscape_area_common = 13;
            uint64  event_time = 15;
            bool  send_review = 16;
            bool  from_intercom = 17;
            bool  intercom_hide_user_card = 18;
            repeated int32  chat_tags = 19;
            uint64  chat_by = 20;
            int32  individual_chat_priority = 21;
            Data.Text  rtf_content = 40;
            Data.Text  rtf_content_v2 = 41;
        }

        message EmojiChatMessage {
            Common  common = 1;
            Data.User  user = 2;
            uint64  emoji_id = 3;
            Data.Text  emoji_content = 4;
            string  default_content = 5;
            Data.Image  background_image = 6;
            bool  from_intercom = 7;
            bool  intercom_hide_user_card = 8;
            PublicAreaCommon  public_area_common = 9;
        }

        message FriendChatMessage {
            Common  common = 1;
            Data.User  user = 2;
            string  content = 3;
        }

        message ChorusMessage {
            Common  common = 1;
            int32  msg_type = 2;
            OpenChorusContent  open_chorus_content = 100;
            CloseChorusContent  close_chorus_content = 101;
            ChorusOrderedSongListChangeContent  chorus_ordered_song_list_change_content = 102;
        }

        message OpenChorusContent {
            Data.ChorusInfo  chorus_info = 1;
            string  sub_singer_toast = 2;
        }

        message CloseChorusContent {
            Data.ChorusInfo  chorus_info = 1;
            uint64  close_user_id = 2;
            string  close_toast = 3;
            int32  close_reason = 4;
        }

        message ChorusOrderedSongListChangeContent{
            Data.ChorusSongInfo list_info = 1;
        }

        message ClientFallbackDynamicMessage {
            Common common = 1;
        }

        message CNYReward {
            Common  common = 1;
            string  award_content = 2;
            string  banner_content = 3;
        }

        message CNYATaskMessage {
            Common  common = 1;
            uint64  watch_duration = 2;
            uint64  watch_total = 3;
            int32  current_round = 7;
            int32  pct = 8;
            repeated uint64  round_target = 9;
            map<string,string> all_desc = 10;
            map<string,Data.Image> all_image = 11;
        }

        message CommentaryChangeMessage {
            Common  common = 1;
            Data.CommentaryRoomInfo  commentary_room_info = 2;
            int32  operation = 3;
        }

        message CommentsMessage {
            Common  common = 1;
            Data.User  user = 2;
            string  content = 3;
            string  color = 4;
            Data.Image  back_ground = 5;
            uint64  action_type = 6;
            string  action_content = 7;
        }

        message CommerceSaleMessage {
            Common  common = 1;
            bool  has_commerce_sale = 2;
        }

        message CommerceMessage {
            Common  common = 1;
            uint64  message_type = 2;
            string  content = 3;
        }

        message CommonCardAreaMessage {
            Common  common = 1;
            int32  message_type = 2;
            Data.BottomRightCardArea  bottom_right_card_data = 3;
            Data.BizPinArea  biz_pin_area = 4;
            Data.CommonCardArea  common_card_area = 5;
        }

        message ComplexContent {
            string  type = 1;
            string  text = 2;
            string  font_color = 3;
            uint64  font_size = 4;
            uint64  weight = 5;
            Data.Image  img = 6;
        }

        message CommonGuideMessage {
            Common  common = 1;
            uint64  message_type = 2;
            Data.Text  main_content = 3;
            ComplexContent  secondary_content = 4;
            Data.Image  icon = 5;
            Data.Text  button_content = 6;
            string  button_action_schema = 7;
            Data.Image  button_icon = 8;
            uint64  duration = 9;
            bool  is_rounded_icon = 10;
        }

        message CommonLuckyMoneyMessage {
            Common  common = 1;
            uint64  diamond_count = 2;
            uint64  luckymoney_id = 3;
            uint64  send_time = 4;
            uint64  delay_time = 5;
            Data.User  user = 6;
            uint64  style = 7;
            LuckyIcon  lucky_icon = 8;
            Data.Image  background = 9;
            bool  is_official = 10;

            message LuckyIcon {
                string  url_list = 1;
                string  uri = 2;
            }
        }

        message TaskPanelMessage {
            Common  common = 1;
            TaskPanel  data = 2;
        }

        message TaskPanel {
            int32  task_id = 1;
            int32  task_type = 2;
            int32  watch_time = 3;
            string  title = 4;
            string  sub_title = 5;
            string  tag_icon_url = 6;
            string  tag_text = 7;
            string  tag_text_color = 8;
            string  button_name = 9;
            string  schema = 10;
            uint64  expire_at = 11;
            int32  status = 12;
            int32  expire_after = 13;
            int32  reward_type = 14;
            string  panel_title = 15;
            string  sub_title_color = 16;
        }

        message TaskRewardToastMessage {
            Common  common = 1;
            TaskRewardToast  data = 2;
        }

        message TaskRewardToast {
            int32  task_id = 1;
            int32  task_type = 2;
            int32  reward_type = 3;
            string  title = 4;
            string  sub_title = 5;
            string  icon_url = 6;
            string  bg_pic_url = 7;
        }

        message CommonPopupMessage {
            Common  common = 1;
            string  schema_url = 2;
            bool  anchor_pop_up = 3;
        }

        message CommonPushMessage {
            Common  common = 1;
            Data.Image  icon = 2;
            string  title = 3;
            string  text = 4;
            string  button = 5;
            string  schema = 6;
            uint64  duration = 7;
            string  scene = 8;
        }

        message CommonTextMessage {
            Common  common = 1;
            Data.User  user = 2;
            string  scene = 3;
            PublicAreaCommon  public_area_common = 4;
        }

        message CommonToastMessage {
            Common  common = 1;
            bool  discardable = 2;
            bool  immediate = 3;
            uint64  duration = 4;
            string  text_color = 5;
            string  background_color_start = 6;
            string  background_color_end = 7;
            uint64  position = 8;
            Data.Image  top_img = 9;
            uint64  top_img_width = 10;
            uint64  top_img_height = 11;
            bool  show_mongolia_layer = 12;
        }

        message ControlMessage {
            Common  common = 1;
            uint64  action = 2;
            string  tips = 3;
            Extra  extra = 4;
            PublicAreaCommon  public_area_common = 5;

            message Extra {
                string  ban_info_url = 1;
                uint64  reason_no = 2;
                Data.Text  title = 3;
                Data.Text  violation_reason = 4;
                Data.Text  content = 5;
                Data.Text  got_it_button = 6;
                Data.Text  ban_detail_button = 7;
                string  source = 8;
            }
        }

        message WebcastLifeLotteryDrawResultEventMessage {
            Common  common = 1;
            uint64  lottery_id = 2;
            repeated uint64  user_ids = 3;
            string  extra = 4;
        }

        message DataLifeLiveMessage {
            Common  common = 1;
            int32  type = 2;
            string  body = 3;
        }

        message DecorationModifyMessage {
            Common  common = 1;
            string  extra = 2;
        }

        message DecorationUpdateMessage {
            Common  common = 1;
            Data.DecotationDetail  detai = 2;
        }

        message DiggMessage {
            Common  common = 1;
            uint64  digg_count = 2;
            uint64  duration = 3;
            uint64  color = 4;
            Data.User  user = 5;
            string  icon = 6;
        }

        message DLiveMessage {
            Common  common = 1;
            repeated string  rooms = 2;
            uint64  max_push_delay_time = 3;
        }

        message OfficialRoomMessage {
            Common  common = 1;
            Data.OfficialRoomInfo  official_room_info = 2;
        }

        message CeremonyMessage {
            Common  common = 1;
            repeated UserRoom  items = 2;
            uint64  max_push_delay_time = 3;
        }

        message UserRoom {
            uint64  type = 1;
            string  room = 2;
            string  user = 3;
        }

        message RcmdUser {
            string  user = 1;
            string  text_before_action = 2;
            string  text_after_action = 3;
            string  authentication_info = 4;
            string  edit_script = 5;
        }

        message RecommendUsersMessage {
            Common  common = 1;
            string  list_title = 2;
            repeated RcmdUser  users = 3;
            Data.Image  img_vertical = 4;
            Data.Image  img_horizontal = 5;
            uint64  display_time = 6;
            uint64  max_push_delay_time = 7;
            bool  check_alive = 8;
        }

        message DolphinSettingUpdateMessage {
            Common  common = 1;
            uint64  settingVersion = 2;
        }

        message DonationMessage {
            Common  common = 1;
            uint64  total = 2;
            string  currency = 3;
            repeated Data.User  sponsor = 4;
            repeated Data.User  user = 5;
        }

        message DoodleGiftMessage {
            Common  common = 1;
            uint64  gift_id = 2;
            uint64  fan_ticket_count = 3;
            Data.User  user = 4;
            Data.User  to_user = 5;
            string  compose = 6;
            uint64  room_fan_ticket_count = 7;
            Data.GiftIMPriority  priority = 8;
            string  log_id = 9;
            PublicAreaCommon  public_area_common = 10;
            Data.Text  tray_display_text = 11;
            Data.GiftTrayInfo  tray_info = 12;
        }

        message LikeUserDetail {
            Data.User  user = 1;
            uint64  count = 2;
        }

        message DoubleLikeHeartMessage {
            Common  common = 1;
            DoubleLikeDetail  double_like_detail = 2;
            Data.Text  self_display_text = 3;
            Data.Text  normal_display_text = 4;
            repeated LikeUserDetail  like_user_list = 5;
        }

        message DoubleLikeTopUserMessage {
            Common  common = 1;
            LikeUserDetail  like_user_list = 2;
        }

        message PicoDisplayInfo {
            uint64  combo_sum_count = 1;
            string  emoji = 2;
            Data.Image  emoji_icon = 3;
            string  emoji_text = 4;
        }

        message DoubleLikeDetail {
            bool  double_flag = 1;
            int32  seq_id = 2;
            int32  renewals_num = 3;
            int32  triggers_num = 4;
        }

        message DisplayControlInfo {
            bool  show_text = 1;
            bool  show_icons = 2;
        }

        message LikeMessage {
            Common  common = 1;
            uint64  count = 2;
            uint64  total = 3;
            uint64  color = 4;
            Data.User  user = 5;
            string  icon = 6;
            DoubleLikeDetail  double_like_detail = 7;
            DisplayControlInfo  display_control_info = 8;
            uint64  linkmic_guest_uid = 9;
            string  scene = 10;
            PicoDisplayInfo  pico_display_info = 11;
            PublicAreaCommon  public_area_common = 12;
        }

        message DouplusIndicatorMessage {
            Common  common = 1;
            uint64  number = 2;
            uint64  status = 3;
            string  toast = 4;
            string  buyer_nickname = 5;
        }

        message DouplusMessage {
            Common  common = 1;
            uint64  promotion = 2;
        }

        message DragonFruitQuizMessage {
            Common  common = 1;
            bytes  biz_msg = 2;
        }

        message DressAssetMessage {
            Common  common = 1;
            string  dress_id = 2;
        }

        message DriveGiftMessage {
            Common  common = 1;
            uint64  new_count = 2;
            string  popup_url = 3;
        }

        message DrumMsgType{

        }

        message DrumResult{

        }

        message DrumMessage {
            Common  common = 1;
            int32  drum_result = 2;
            int32  dump_msg_type = 3;
            uint64  drum_count = 4;
            uint64  report_time_gap = 5;
            uint64  push_id = 6;
            string  push_id_str = 7;
            repeated User  users = 8;

            message User {
                uint64  user_id = 1;
                string  nick_name = 2;
                string  avatar = 3;
                string  user_id_str = 4;
            }
        }

        message ProjectDModifyH5 {
            Common  common = 1;
            string  top_left = 2;
            string  buttom_right = 3;
        }

        message ProjectDTaskInfo {
            Common  common = 1;
            int32  atype = 2;
            Data.Image  icon = 3;
            string  count = 4;
            string  fallback_context = 5;
            string  award_url = 6;
            uint64  left_task_count = 7;
            uint64  sub_task_id = 8;
        }

        message DutyGiftMessage {
            Common  common = 1;
            int32  speedy_gift_id = 5;
            int32  target_score = 6;
            int32  stage_count = 7;
            int32  status = 8;
            int32  score = 9;
            Data.User  contribute_most = 10;
            int32  contribute_most_score = 11;
            uint64  duty_id = 12;
        }

        message EasterEggMessage {
            Common  common = 1;
            EasterEggMessageData  data = 2;
        }

        message EasterEggMessageData {
            bool  has_easter_egg = 1;
            uint64  stage = 2;
            uint64  total_stage = 3;
            uint64  effects_num = 4;
            uint64  start_count = 5;
            uint64  end_count = 6;
            uint64  count = 7;
        }

        message EcomFansClubMessage {
            Common  common = 1;
            int32  action = 2;
            UserInfo  user = 3;
        }

        message UserInfo {
            uint64  user_id = 1;
            int32  level = 2;
        }

        message CornerReachMessage {
            Common  common = 1;
            uint64  duration = 2;
            uint64  elem_type = 3;
        }

        message TempStateAreaReachMessage {
            Common  common = 1;
            uint64  elem_type = 2;
            uint64  elem_id = 3;
            uint64  item_id = 4;
            uint64  status = 5;
            Resource  resource = 6;

            message Resource {
                string  name = 1;
                string  icon = 2;
                string  description = 3;
                string  extra = 4;
            }
        }

        message EpisodeChatMessage {
            Common  common = 1;
            Data.User  user = 2;
            string  content = 3;
            bool  visible_to_sender = 4;
            Data.Image  background_image = 5;
            PublicAreaCommon  public_area_common = 6;
            Data.Image  gift_image = 7;
            uint64  agree_msg_id = 8;
            repeated string  color_value = 9;
        }

        message FansGroupGuideMessage {
            Common  common = 1;
            int32  type = 2;
            string  title = 3;
            string  content = 4;
            uint64  auto_record_duration_ms = 5;
            Data.Text  rich_text = 6;
            string  scheme_url = 7;
        }

        message FansclubStatisticsMessage {
            Common  common = 1;
            string  name = 2;
            uint64  fans_count = 3;
        }

        message FansclubMessage {
            Common  common = 1;
            int32  action = 2;
            string  content = 3;
            Data.User  user = 4;
            UpgradePrivilege  upgrade_privilege = 5;
            PublicAreaCommon  public_area_common = 6;

            message UpgradePrivilege {
                string  content = 1;
                string  description = 2;
                int32  button_type = 3;
            }
        }

        message FansclubReviewMessage {
            Common  common = 1;
            int32  action = 2;
            string  content = 3;
        }

        message FansclubGuideMessage {
            Common  common = 1;
            Data.Text  title = 2;
            Data.Text  sub_title = 3;
        }

        message FeaturedPublicScreenSettingMessage {
            Common  common = 1;
            uint64  status = 2;
            string  toast = 3;
        }

        message FeedbackActionMessage {
            Common  common = 1;
            uint64  action_id = 2;
        }

        message FeedbackCardMessage {
            Common  common = 1;
            uint64  questionnaire_id = 2;
            uint64  scatterMills = 3;
        }

        message FireworkMessage {
            Common  common = 1;
            uint64  count = 2;
            uint64  report_time_gap = 3;
            uint64  push_id = 4;
            string  push_id_str = 5;
            repeated User  users = 6;

            message User {
                uint64  user_id = 1;
                string  nick_name = 2;
                string  avatar = 3;
                string  user_id_str = 4;
            }
        }

        message FireworkMultiMessage {
            Common  common = 1;
            bytes  biz_msg = 2;
        }

        message FollowGuideMessage {
            Common  common = 1;
            Data.Image  avatarUrl = 2;
            string  content = 3;
            string  hourRankInfo = 4;
            uint64  giftId = 5;
            uint64  duration = 6;
            string  popupReason = 7;
        }

        message BrokerNotifyMessage {
            Common  common = 1;
            uint64  msg_type = 2;
            string  content = 3;
            uint64  timestamp = 4;
            uint64  msg_sub_type = 5;
            uint64  msg_id = 6;
        }

        message FreeCellGiftMessage {
            Common  common = 1;
            uint64  gift_id = 2;
            uint64  fan_ticket_count = 3;
            uint64  group_count = 4;
            uint64  repeat_count = 5;
            uint64  combo_count = 6;
            Data.User  user = 7;
            Data.User  to_user = 8;
            FreeCellData  free_cell = 9;
            uint64  room_fan_ticket_count = 10;
            string  log_id = 11;
            PublicAreaCommon  public_area_common = 12;

            message FreeCellData {
                uint64  time_now_ms = 1;
                uint64  time_start_ms = 2;
                uint64  time_freeze_end_ms = 3;
                uint64  time_double_end_ms = 4;
                uint64  time_end_ms = 5;
                uint64  free_cell_length = 6;
                bool  is_freeze = 7;
                bool  is_double = 8;
                Data.User  contribute_most_user = 9;
                uint64  contribute_most_coins = 10;
                uint64  distance_from_previous_one = 11;
                uint64  index_in_day_ranklist = 12;
            }
        }

        message FreeGiftMessage {
            Common  common = 1;
            Data.User  user = 2;
            Data.FreeGift  free_gift = 3;
        }

        message GamblingStatusChangedMessage {
            Common  common = 1;
            uint64  prev_status = 2;
            GameQuizInfo  game_quiz_info = 3;

            message GameQuizInfo {
                uint64  id = 1;
                uint64  room_id = 2;
                uint64  status = 3;
            }
        }

        message GameChannelMessage {
            Common  common = 1;
            uint64  game_id = 2;
            uint64  message_type = 3;
            string  extra = 4;
            Data.User  user = 5;
        }

        message HostVersion {
            uint64  host_id = 1;
            string  min_version = 2;
            string  max_version = 3;
        }

        message GameAncAudEntranceMessage {
            Common  common = 1;
            uint64  game_id = 2;
            uint64  game_kind = 3;
            string  extra = 4;
            bool  show_audience_float_entrance = 5;
            repeated HostVersion  version_range = 6;
            string  app_id = 7;
            string  meta_version = 8;
            string  name = 9;
            string  icon_url = 10;
            uint64  start_id = 11;
        }

        message GameAncAudStatusMessage {
            Common  common = 1;
            uint64  game_id = 2;
            uint64  send_type = 3;
            uint64  game_status = 4;
            string  extra = 5;
        }

        message GameAncAudPanelCtrlMessage {
            Common  common = 1;
            uint64  game_id = 2;
            uint64  send_type = 3;
            uint64  panel_type = 4;
            string  extra = 5;
        }

        message GameAncAudDataFromAncMessage {
            Common  common = 1;
            uint64  game_id = 2;
            uint64  send_type = 3;
            string  data = 4;
            string  extra = 5;
        }

        message GameAncAudDataFromAudMessage {
            Common  common = 1;
            uint64  game_id = 2;
            string  data = 3;
            string  extra = 4;
        }

        message GameDevelopMessage {
            Common  common = 1;
            uint64  game_id = 2;
            int32  develop = 3;
            string  app_id = 4;
            string  sign = 5;
        }

        message GameGiftMessage {
            Common  common = 1;
            uint64  gift_id = 2;
            uint64  fan_ticket_count = 3;
            Data.User  user = 4;
            Data.User  to_user = 5;
            string  normalContent = 6;
            MonkeyData  monkey_data = 8;
            string  log_id = 9;
            PublicAreaCommon  public_area_common = 10;

            message MonkeyData {
                int32  score = 1;
                bool  break_record = 2;
                bool  need_popup = 3;
                string  popup_content = 4;
            }
        }

        message GameGiftStatusMessage {
            Common  common = 1;
            uint64  game_id = 2;
            int32  status = 3;
            string  extra = 4;
        }

        message GameStatusMessage {
            Common  common = 1;
            uint64  gameID = 2;
            int32  status = 3;
            string  config_extra = 4;
        }

        message GameIntroduceMessage {
            Common  common = 1;
            GameIntroduceShowMessage  game_introduce = 2;
        }

        message GameIntroduceShowMessage {
            int32  type = 1;
            int32  msg_type = 2;
            IntroduceDispatchStrategy  dispatch_strategy = 3;
            string  updated_data = 4;
            uint64  introduce_type = 5;
            AtmosphereContent  atmosphere_content = 11;
        }

        message IntroduceDispatchStrategy {
            int32  strategy_type = 1;
            int32  max_retry_times = 2;
            int32  min_random_ms = 3;
            int32  max_random_ms = 4;
        }

        message AtmosphereContent {
            uint64  show_duration = 1;
            string  count = 2;
        }

        message RemindIntroduce {
            string  game_id = 1;
            Data.GameImageBundler  game_icon = 2;
            string  content = 3;
        }

        message GameInviteMessage {
            Common  common = 1;
            Data.GameInvite  invite_item = 2;
            Data.InvitationSwitch  invitation_switch = 3;
            string  config_extra = 4;
        }

        message GameInviteReplyMessage {
            Common  common = 1;
            int32  reply = 2;
            string  extra = 3;
        }

        message GameOnLivePromoteMessage {
            Common  common = 1;
            OnLivePromoteMessage  on_live_promote = 2;
        }

        message OnLivePromoteMessage {
            string  bubble_text = 1;
            string  promote_text = 2;
            string  introduce_text = 3;
            bool  is_support_introduce = 4;
            string  game_icon = 5;
            string  game_name = 6;
            uint64  biz_mode = 7;
            string  game_id = 8;
        }

        message GamePVPMessage {
            Common  common = 1;
            uint64  game_id = 2;
            string  extra = 3;
        }

        message GameStatusUpdateMessage {
            Common  common = 1;
            uint64  anchor_id = 2;
            uint64  room_id = 3;
            int32  game_kind = 4;
            uint64  game_id = 5;
            uint64  round_id = 6;
            int32  event_time = 7;
            int32  present_msg_type = 8;
            string  config_extra = 9;
            uint64  play_kind = 10;
            uint64  switch_id = 11;
        }

        message GameCPAnchorPromoteInfoMessage {
            Common  common = 1;
            SimpleGameInfo  game_info = 2;
        }

        message SimpleGameInfo {
            string  game_id = 1;
            int32  stage = 2;
            int32  biz_type = 3;
            string  biz_id = 4;
            string  biz_mode = 5;
            string  biz_extra = 6;
            string  game_attr = 7;
            string  component_extra = 8;
            bool  is_introduce = 9;
            string  promote_instance_id = 10;
            string  game_name = 11;
            string  tags = 12;
            string  game_icon = 13;
            string  android_package_size = 14;
            string  android_package_name = 15;
            uint64  game_category_id = 16;
            uint64  game_tag_id = 17;
            uint64  game_union_type = 18;
            bool  support_introduce = 19;
        }

        message GameCPBaseMessage {
            Common  common = 1;
            GameCPShowMessage  show_info = 2;
        }

        message GameCPShowMessage {
            int32  type = 1;
            Data.Text  introduce_download_info = 2;
            string  game_image = 3;
            string  game_name = 4;
            string  game_download_url = 5;
            string  game_trace_info = 6;
            repeated string  game_tag_names = 7;
            string  game_background_color = 8;
            int32  introduce_time_limit = 9;
            uint64  introduce_start_time = 10;
            int32  introduce_stop_type = 11;
            Data.Text  introduce_stop_message = 12;
            string  game_id = 13;
            bool  audit_result = 14;
            string  ios_app_id = 15;
            string  company_name = 16;
            string  download_extra = 17;
            string  android_privacy_url = 18;
            string  android_authorization_url = 19;
            string  ios_privacy_url = 20;
            string  ios_authorization_url = 21;
            string  android_version = 22;
            string  ios_version = 23;
            string  active_link = 24;
            uint64  download_count = 25;
            bool  is_show_animate = 26;
            uint64  animate_start_time = 27;
            uint64  animate_duration = 28;
            string  anti_hijack_content = 29;
            string  anti_hijack_image = 30;
            string  ios_sale_point = 31;
            bool  is_forbid_jump_ios_app = 32;
            bool  has_platform_gift = 33;
            string  open_game_url = 44;
            string  prop_icon = 45;
            string  prop_name = 46;
            string  prop_id = 47;
            uint64  market_price = 48;
            uint64  selling_price = 49;
            uint64  prop_sku_id = 50;
            ReserveItem  reserve_item = 51;
            uint64  prop_type = 52;
            uint64  game_access_type = 53;
            bool  is_prop_exp_game = 54;
            repeated string  component_ids = 55;
            int32  biz_type = 56;
            uint64  install_user_count = 57;
            string  android_sale_point = 58;
            MiniGameMeta  mini_game_meta = 59;
            uint64  support_platforms = 60;
            MiniPlayMeta  mini_play_meta = 61;
            string  play_introduce = 62;
            string  small_icon = 63;
            string  game_introduction_url = 64;
            Data.GameImageBundler  game_icon = 65;
            CloudGameMeta  cloud_game_meta = 66;
            AtmosphereContent  atmosphere_content = 67;
            FeaturedContent  featured_content = 68;
            string  promote_instance_id = 70;
            uint64  prop_stock_num = 71;
            IntroduceCardTag  tag = 72;
            IntroduceCardDisplayInfo  card_display_info = 73;
            bool  is_in_pre_download_period = 74;
        }
    }
}


















